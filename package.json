{
  "_args": [
    [
      {
        "raw": "sequelize@git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
        "scope": null,
        "escapedName": "sequelize",
        "name": "sequelize",
        "rawSpec": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
        "spec": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
          "sshUrl": "git+ssh://git@github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
          "httpsUrl": "git+https://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
          "gitUrl": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
          "shortcut": "github:sushantdhiman/sequelize#871718cb0c1fb16f438783e286f911e979585fae",
          "directUrl": "https://raw.githubusercontent.com/sushantdhiman/sequelize/871718cb0c1fb16f438783e286f911e979585fae/package.json"
        }
      },
      "/var/www/ics/api"
    ]
  ],
  "_from": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
  "_id": "sequelize@4.0.0-1",
  "_inCache": true,
  "_installable": true,
  "_location": "/sequelize",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sequelize@git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
    "scope": null,
    "escapedName": "sequelize",
    "name": "sequelize",
    "rawSpec": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
    "spec": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
      "sshUrl": "git+ssh://git@github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
      "httpsUrl": "git+https://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
      "gitUrl": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
      "shortcut": "github:sushantdhiman/sequelize#871718cb0c1fb16f438783e286f911e979585fae",
      "directUrl": "https://raw.githubusercontent.com/sushantdhiman/sequelize/871718cb0c1fb16f438783e286f911e979585fae/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
  "_shasum": "5c3bed758e22abb78e33ad99b627811a322186e8",
  "_shrinkwrap": null,
  "_spec": "sequelize@git://github.com/sushantdhiman/sequelize.git#871718cb0c1fb16f438783e286f911e979585fae",
  "_where": "/var/www/ics/api",
  "author": {
    "name": "Sascha Depold",
    "email": "sascha@depold.com"
  },
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "contributors": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Jan Aagaard Meier",
      "email": "janzeh@gmail.com,jmei@itu.dk"
    },
    {
      "name": "Daniel Durante",
      "email": "me@danieldurante.com"
    },
    {
      "name": "Mick Hansen",
      "email": "mick.kasper.hansen@gmail.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.3.4",
    "depd": "^1.1.0",
    "dottie": "^1.0.0",
    "generic-pool": "2.4.2",
    "inflection": "^1.6.0",
    "lodash": "4.12.0",
    "moment": "^2.13.0",
    "moment-timezone": "^0.5.4",
    "node-uuid": "~1.4.4",
    "retry-as-promised": "^2.0.0",
    "semver": "^5.0.1",
    "shimmer": "1.1.0",
    "terraformer-wkt-parser": "^1.1.0",
    "toposort-class": "^1.0.1",
    "validator": "^5.2.0",
    "wkx": "0.2.0"
  },
  "description": "Multi dialect ORM for Node.JS/io.js",
  "devDependencies": {
    "babel-core": "^6.8.0",
    "babel-preset-es2015": "^6.6.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.1.0",
    "chai-datetime": "^1.4.0",
    "chai-spies": "^0.7.0",
    "commander": "^2.6.0",
    "continuation-local-storage": "^3.1.4",
    "dox": "~0.8.0",
    "git": "^0.1.5",
    "hints": "^0.2.0",
    "istanbul": "^0.4.3",
    "jshint": "^2.9.2",
    "lcov-result-merger": "^1.2.0",
    "mocha": "^2.4.2",
    "mysql": "~2.10.1",
    "pg": "^4.4.6",
    "pg-hstore": "^2.3.1",
    "pg-native": "^1.8.0",
    "pg-types": "^1.11.0",
    "sinon": "^1.17.4",
    "sinon-chai": "^2.8.0",
    "sqlite3": "^3.1.4",
    "tedious": "^1.13.2",
    "watchr": "~2.4.11"
  },
  "engines": {
    "node": ">=0.6.21"
  },
  "gitHead": "871718cb0c1fb16f438783e286f911e979585fae",
  "homepage": "https://github.com/sequelize/sequelize#readme",
  "keywords": [
    "mysql",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "license": "MIT",
  "main": "index",
  "name": "sequelize",
  "optionalDependencies": {},
  "readme": "# Sequelize\n\n[![Build Status](https://travis-ci.org/sequelize/sequelize.svg?branch=master)](https://travis-ci.org/sequelize/sequelize) [![Dependency Status](https://david-dm.org/sequelize/sequelize.svg)](https://david-dm.org/sequelize/sequelize) [![Test Coverage](https://codeclimate.com/github/sequelize/sequelize/badges/coverage.svg)](https://codeclimate.com/github/sequelize/sequelize)\n[![Bountysource](https://www.bountysource.com/badge/team?team_id=955&style=bounties_received)](https://www.bountysource.com/teams/sequelize/issues?utm_source=Sequelize&utm_medium=shield&utm_campaign=bounties_received)\n[![Slack Status](http://sequelize-slack.herokuapp.com/badge.svg)](http://sequelize-slack.herokuapp.com)\n\nSequelize is a promise-based Node.js/io.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, read replication and more.\n\n[Documentation](http://sequelize.readthedocs.org/en/latest/)\n\n## Installation\n\n`npm install sequelize`\n\nFrom 3.0.0 and up Sequelize will follow SEMVER. 3.0.0 contains important security fixes so we highly recommend that users upgrade.\n\nIf you still use 1.7 please prefer to [Upgrading to 2.0](https://github.com/sequelize/sequelize/wiki/Upgrading-to-2.0) and the changelog between 2.0 and 3.0. 2.1 also has a breaking change.\n\n## Features\n\n- Schema definition\n- Schema synchronization/dropping\n- 1:1, 1:M & N:M Associations\n- Through models\n- Promises\n- Hooks/callbacks/lifecycle events\n- Prefetching/association including\n- Transactions\n- Migrations\n- CLI ([sequelize-cli](https://github.com/sequelize/cli))\n\n## Resources\n- [Changelog](https://github.com/sequelize/sequelize/blob/master/changelog.md)\n- [Getting Started](http://docs.sequelizejs.com/en/latest/docs/getting-started/)\n- [Documentation](http://docs.sequelizejs.com/en/latest/)\n- [API Reference](http://docs.sequelizejs.com/en/latest/)\n- [Collaboration and pull requests](https://github.com/sequelize/sequelize/blob/master/CONTRIBUTING.md)\n- [Roadmap](https://github.com/sequelize/sequelize/issues/2869)\n- [Twitter](https://twitter.com/SequelizeJS): @SequelizeJS\n- [IRC](http://webchat.freenode.net?channels=sequelizejs): sequelizejs on Freenode\n- [Google Groups](https://groups.google.com/forum/#!forum/sequelize)\n- [Add-ons & Plugins](https://github.com/sequelize/sequelize/wiki/Add-ons-&-Plugins)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "build-docker": "docker-compose build",
    "codeclimate": "npm run cover-all && npm run codeclimate-send",
    "codeclimate-send": "npm install -g codeclimate-test-reporter && CODECLIMATE_REPO_TOKEN=ce835a510bbf423a5ab5400a9bdcc2ec2d189d840b31657c6ee7cb9916b161d6 codeclimate-test-reporter < coverage/lcov.info",
    "cover": "rm -rf coverage && npm run teaser && COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- -t 30000 --ui tdd 'test/integration/**/*.test.js'",
    "cover-all": "npm run cover-mysql && npm run cover-postgres && npm run cover-postgres-native && npm run cover-mssql && npm run cover-sqlite && npm run cover-mariadb && npm run merge-coverage",
    "cover-mariadb": "DIALECT=mariadb npm run cover && mv coverage coverage-mariadb",
    "cover-mssql": "DIALECT=mssql npm run cover && mv coverage coverage-mssql",
    "cover-mysql": "DIALECT=mysql npm run cover && mv coverage coverage-mysql",
    "cover-postgres": "DIALECT=postgres npm run cover && mv coverage coverage-postgres",
    "cover-postgres-native": "DIALECT=postgres-native npm run cover && mv coverage coverage-postgres-native",
    "cover-sqlite": "DIALECT=sqlite npm run cover && mv coverage coverage-sqlite",
    "docs": "node docs/docs-generator.js",
    "jshint": "jshint lib test",
    "merge-coverage": "rm -rf coverage && mkdir coverage && ./node_modules/.bin/lcov-result-merger 'coverage-*/lcov.info' 'coverage/lcov.info'",
    "sscce": "docker-compose run sequelize /bin/sh -c \"node sscce.js\"",
    "sscce-mysql": "DIALECT=mysql npm run sscce",
    "sscce-postgres": "DIALECT=postgres npm run sscce",
    "sscce-sqlite": "DIALECT=sqlite npm run sscce",
    "teaser": "echo ''; node -pe \"Array(20 + process.env.DIALECT.length + 3).join('#')\"; echo '# Running tests for '$DIALECT' #'; node -pe \"Array(20 + process.env.DIALECT.length + 3).join('#')\";echo '';",
    "test": "if [ $COVERAGE ]; then npm run codeclimate; else npm run jshint && npm run teaser && npm run test-unit && npm run test-integration; fi",
    "test-all": "npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mariadb && npm run test-mssql",
    "test-docker": "docker-compose run sequelize /bin/sh -c \"npm run test-all\"",
    "test-docker-integration": "docker-compose run sequelize /bin/sh -c \"npm run test-integration-all\"",
    "test-docker-unit": "docker-compose run sequelize /bin/sh -c \"npm run test-unit-all\"",
    "test-integration": "mocha --globals setImmediate,clearImmediate --ui tdd --check-leaks --colors -t 15000 --reporter spec --grep \"$GREP\" 'test/integration/**/*.test.js'",
    "test-integration-all": "npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite && npm run test-integration-mariadb",
    "test-integration-mariadb": "DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "DIALECT=sqlite npm run test-integration",
    "test-mariadb": "DIALECT=mariadb npm test",
    "test-mssql": "DIALECT=mssql npm test",
    "test-mysql": "DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "DIALECT=postgres npm test",
    "test-postgres-native": "DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "DIALECT=sqlite npm test",
    "test-unit": "mocha --globals setImmediate,clearImmediate --ui tdd --check-leaks --colors -t 15000 --reporter spec 'test/unit/**/*.js'",
    "test-unit-all": "npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite && npm run test-unit-mariadb",
    "test-unit-mariadb": "DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "DIALECT=sqlite npm run test-unit"
  },
  "version": "4.0.0-1"
}
